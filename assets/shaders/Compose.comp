#version 460
#extension GL_GOOGLE_include_directive : require

#include "UniformBufferObject.glsl"

layout(binding = 0, rgba16f) uniform image2D Final0Image;
layout(binding = 1, rgba16f) uniform image2D Final1Image;
layout(binding = 2, rgba16f) uniform image2D AlbedoImage;
layout(binding = 3, rgba8) uniform image2D OutImage;
layout(binding = 4) readonly uniform UniformBufferObjectStruct { UniformBufferObject Camera; };
layout(binding = 5, rg16f) uniform image2D MotionVectorImage;

layout(push_constant) uniform PushConsts {
    uint pingpong;
    uint stepsize;
} pushConsts;

layout(local_size_x = 8, local_size_y = 4, local_size_z = 1) in;

void main() {
    ivec2 ipos = ivec2(gl_GlobalInvocationID.xy);

    // simple compose together
    vec4 final = pushConsts.pingpong == 0 ? imageLoad(Final1Image, ipos) : imageLoad(Final0Image, ipos);
    vec4 albedo = imageLoad(AlbedoImage, ipos);
    imageStore(OutImage, ipos, sqrt(final * albedo));

    //vec4 motion = clamp(imageLoad(MotionVectorImage, ipos) / 1.f, -1.0f, 1.0f);// * 0.5f + 0.5f;
    //imageStore(OutImage, ipos, vec4(motion.rg,0,0));
    //imageStore(OutImage, ipos, sqrt(albedo));
}