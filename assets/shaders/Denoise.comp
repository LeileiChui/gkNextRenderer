#version 460
#extension GL_GOOGLE_include_directive : require
#define WORKGROUP_SIZE 8

#include "UniformBufferObject.glsl"

layout(binding = 0, rgba32f) uniform image2D AccumulationImage;
layout(binding = 1, rgba8) uniform image2D OutputImage;
layout(binding = 2, rgba8) uniform image2D GBufferImage;
layout(binding = 3) readonly uniform UniformBufferObjectStruct { UniformBufferObject Camera; };

layout(local_size_x = 8, local_size_y = 4, local_size_z = 1) in;

vec3 hsv2rgb(vec3 c) {
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void main() {
    vec4 org = imageLoad(OutputImage, ivec2(gl_GlobalInvocationID.xy));
    imageStore(OutputImage, ivec2(gl_GlobalInvocationID.xy), vec4( dot(vec4(.33,.33,.33,0), org)) );
}